// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Proto/build_test_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace sRPC.Test.Proto {

  /// <summary>Holder for reflection information generated from Proto/build_test_service.proto</summary>
  public static partial class BuildTestServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for Proto/build_test_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BuildTestServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5Qcm90by9idWlsZF90ZXN0X3NlcnZpY2UucHJvdG8SCXNycGMudGVzdBob",
            "Z29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3RvGh9nb29nbGUvcHJvdG9idWYv",
            "dGltZXN0YW1wLnByb3RvIrQDCgtNdWx0aUZpZWxkcxIRCglib29sX2ZsYWcY",
            "ASABKAgSEwoLYnl0ZXNfdmFsdWUYAiABKAwSFAoMZG91YmxlX3ZhbHVlGAMg",
            "ASgBEikKCmVudW1fdmFsdWUYBCABKA4yFS5zcnBjLnRlc3QuRW51bU9iamVj",
            "dBIVCg1maXhlZDMyX3ZhbHVlGAUgASgHEhUKDWZpeGVkNjRfdmFsdWUYBiAB",
            "KAYSEwoLZmxvYXRfdmFsdWUYByABKAISEwoLaW50MzJfdmFsdWUYCCABKAUS",
            "EwoLaW50NjRfdmFsdWUYCSABKAMSMQoNbWVzc2FnZV92YWx1ZRgKIAEoCzIa",
            "Lmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASFgoOc2ZpeGVkMzJfdmFsdWUY",
            "CyABKA8SFgoOc2ZpeGVkNjRfdmFsdWUYDCABKBASFAoMc2ludDMyX3ZhbHVl",
            "GA0gASgREhQKDHNpbnQ2NF92YWx1ZRgOIAEoEhIUCgxzdHJpbmdfdmFsdWUY",
            "DyABKAkSFAoMdWludDMyX3ZhbHVlGBAgASgNEhQKDHVpbnQ2NF92YWx1ZRgR",
            "IAEoBCoxCgpFbnVtT2JqZWN0EhEKDURFRkFVTFRfVkFMVUUQABIQCgxTRUNP",
            "TkRfVkFMVUUQATJVChBCdWlsZFRlc3RTZXJ2aWNlEkEKD1Rlc3RNdWx0aUZp",
            "ZWxkcxIWLnNycGMudGVzdC5NdWx0aUZpZWxkcxoWLmdvb2dsZS5wcm90b2J1",
            "Zi5FbXB0eUISqgIPc1JQQy5UZXN0LlByb3RvYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::sRPC.Test.Proto.EnumObject), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::sRPC.Test.Proto.MultiFields), global::sRPC.Test.Proto.MultiFields.Parser, new[]{ "BoolFlag", "BytesValue", "DoubleValue", "EnumValue", "Fixed32Value", "Fixed64Value", "FloatValue", "Int32Value", "Int64Value", "MessageValue", "Sfixed32Value", "Sfixed64Value", "Sint32Value", "Sint64Value", "StringValue", "Uint32Value", "Uint64Value" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EnumObject {
    [pbr::OriginalName("DEFAULT_VALUE")] DefaultValue = 0,
    [pbr::OriginalName("SECOND_VALUE")] SecondValue = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// this message type contains a wide variety of field types
  /// </summary>
  public sealed partial class MultiFields : pb::IMessage<MultiFields> {
    private static readonly pb::MessageParser<MultiFields> _parser = new pb::MessageParser<MultiFields>(() => new MultiFields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiFields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::sRPC.Test.Proto.BuildTestServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiFields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiFields(MultiFields other) : this() {
      boolFlag_ = other.boolFlag_;
      bytesValue_ = other.bytesValue_;
      doubleValue_ = other.doubleValue_;
      enumValue_ = other.enumValue_;
      fixed32Value_ = other.fixed32Value_;
      fixed64Value_ = other.fixed64Value_;
      floatValue_ = other.floatValue_;
      int32Value_ = other.int32Value_;
      int64Value_ = other.int64Value_;
      messageValue_ = other.messageValue_ != null ? other.messageValue_.Clone() : null;
      sfixed32Value_ = other.sfixed32Value_;
      sfixed64Value_ = other.sfixed64Value_;
      sint32Value_ = other.sint32Value_;
      sint64Value_ = other.sint64Value_;
      stringValue_ = other.stringValue_;
      uint32Value_ = other.uint32Value_;
      uint64Value_ = other.uint64Value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiFields Clone() {
      return new MultiFields(this);
    }

    /// <summary>Field number for the "bool_flag" field.</summary>
    public const int BoolFlagFieldNumber = 1;
    private bool boolFlag_;
    /// <summary>
    /// basic definitions 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool BoolFlag {
      get { return boolFlag_; }
      set {
        boolFlag_ = value;
      }
    }

    /// <summary>Field number for the "bytes_value" field.</summary>
    public const int BytesValueFieldNumber = 2;
    private pb::ByteString bytesValue_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BytesValue {
      get { return bytesValue_; }
      set {
        bytesValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "double_value" field.</summary>
    public const int DoubleValueFieldNumber = 3;
    private double doubleValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DoubleValue {
      get { return doubleValue_; }
      set {
        doubleValue_ = value;
      }
    }

    /// <summary>Field number for the "enum_value" field.</summary>
    public const int EnumValueFieldNumber = 4;
    private global::sRPC.Test.Proto.EnumObject enumValue_ = global::sRPC.Test.Proto.EnumObject.DefaultValue;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::sRPC.Test.Proto.EnumObject EnumValue {
      get { return enumValue_; }
      set {
        enumValue_ = value;
      }
    }

    /// <summary>Field number for the "fixed32_value" field.</summary>
    public const int Fixed32ValueFieldNumber = 5;
    private uint fixed32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Fixed32Value {
      get { return fixed32Value_; }
      set {
        fixed32Value_ = value;
      }
    }

    /// <summary>Field number for the "fixed64_value" field.</summary>
    public const int Fixed64ValueFieldNumber = 6;
    private ulong fixed64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Fixed64Value {
      get { return fixed64Value_; }
      set {
        fixed64Value_ = value;
      }
    }

    /// <summary>Field number for the "float_value" field.</summary>
    public const int FloatValueFieldNumber = 7;
    private float floatValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float FloatValue {
      get { return floatValue_; }
      set {
        floatValue_ = value;
      }
    }

    /// <summary>Field number for the "int32_value" field.</summary>
    public const int Int32ValueFieldNumber = 8;
    private int int32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int32Value {
      get { return int32Value_; }
      set {
        int32Value_ = value;
      }
    }

    /// <summary>Field number for the "int64_value" field.</summary>
    public const int Int64ValueFieldNumber = 9;
    private long int64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int64Value {
      get { return int64Value_; }
      set {
        int64Value_ = value;
      }
    }

    /// <summary>Field number for the "message_value" field.</summary>
    public const int MessageValueFieldNumber = 10;
    private global::Google.Protobuf.WellKnownTypes.Timestamp messageValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp MessageValue {
      get { return messageValue_; }
      set {
        messageValue_ = value;
      }
    }

    /// <summary>Field number for the "sfixed32_value" field.</summary>
    public const int Sfixed32ValueFieldNumber = 11;
    private int sfixed32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sfixed32Value {
      get { return sfixed32Value_; }
      set {
        sfixed32Value_ = value;
      }
    }

    /// <summary>Field number for the "sfixed64_value" field.</summary>
    public const int Sfixed64ValueFieldNumber = 12;
    private long sfixed64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sfixed64Value {
      get { return sfixed64Value_; }
      set {
        sfixed64Value_ = value;
      }
    }

    /// <summary>Field number for the "sint32_value" field.</summary>
    public const int Sint32ValueFieldNumber = 13;
    private int sint32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sint32Value {
      get { return sint32Value_; }
      set {
        sint32Value_ = value;
      }
    }

    /// <summary>Field number for the "sint64_value" field.</summary>
    public const int Sint64ValueFieldNumber = 14;
    private long sint64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sint64Value {
      get { return sint64Value_; }
      set {
        sint64Value_ = value;
      }
    }

    /// <summary>Field number for the "string_value" field.</summary>
    public const int StringValueFieldNumber = 15;
    private string stringValue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StringValue {
      get { return stringValue_; }
      set {
        stringValue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uint32_value" field.</summary>
    public const int Uint32ValueFieldNumber = 16;
    private uint uint32Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uint32Value {
      get { return uint32Value_; }
      set {
        uint32Value_ = value;
      }
    }

    /// <summary>Field number for the "uint64_value" field.</summary>
    public const int Uint64ValueFieldNumber = 17;
    private ulong uint64Value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uint64Value {
      get { return uint64Value_; }
      set {
        uint64Value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiFields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BoolFlag != other.BoolFlag) return false;
      if (BytesValue != other.BytesValue) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DoubleValue, other.DoubleValue)) return false;
      if (EnumValue != other.EnumValue) return false;
      if (Fixed32Value != other.Fixed32Value) return false;
      if (Fixed64Value != other.Fixed64Value) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(FloatValue, other.FloatValue)) return false;
      if (Int32Value != other.Int32Value) return false;
      if (Int64Value != other.Int64Value) return false;
      if (!object.Equals(MessageValue, other.MessageValue)) return false;
      if (Sfixed32Value != other.Sfixed32Value) return false;
      if (Sfixed64Value != other.Sfixed64Value) return false;
      if (Sint32Value != other.Sint32Value) return false;
      if (Sint64Value != other.Sint64Value) return false;
      if (StringValue != other.StringValue) return false;
      if (Uint32Value != other.Uint32Value) return false;
      if (Uint64Value != other.Uint64Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BoolFlag != false) hash ^= BoolFlag.GetHashCode();
      if (BytesValue.Length != 0) hash ^= BytesValue.GetHashCode();
      if (DoubleValue != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DoubleValue);
      if (EnumValue != global::sRPC.Test.Proto.EnumObject.DefaultValue) hash ^= EnumValue.GetHashCode();
      if (Fixed32Value != 0) hash ^= Fixed32Value.GetHashCode();
      if (Fixed64Value != 0UL) hash ^= Fixed64Value.GetHashCode();
      if (FloatValue != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(FloatValue);
      if (Int32Value != 0) hash ^= Int32Value.GetHashCode();
      if (Int64Value != 0L) hash ^= Int64Value.GetHashCode();
      if (messageValue_ != null) hash ^= MessageValue.GetHashCode();
      if (Sfixed32Value != 0) hash ^= Sfixed32Value.GetHashCode();
      if (Sfixed64Value != 0L) hash ^= Sfixed64Value.GetHashCode();
      if (Sint32Value != 0) hash ^= Sint32Value.GetHashCode();
      if (Sint64Value != 0L) hash ^= Sint64Value.GetHashCode();
      if (StringValue.Length != 0) hash ^= StringValue.GetHashCode();
      if (Uint32Value != 0) hash ^= Uint32Value.GetHashCode();
      if (Uint64Value != 0UL) hash ^= Uint64Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BoolFlag != false) {
        output.WriteRawTag(8);
        output.WriteBool(BoolFlag);
      }
      if (BytesValue.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(BytesValue);
      }
      if (DoubleValue != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DoubleValue);
      }
      if (EnumValue != global::sRPC.Test.Proto.EnumObject.DefaultValue) {
        output.WriteRawTag(32);
        output.WriteEnum((int) EnumValue);
      }
      if (Fixed32Value != 0) {
        output.WriteRawTag(45);
        output.WriteFixed32(Fixed32Value);
      }
      if (Fixed64Value != 0UL) {
        output.WriteRawTag(49);
        output.WriteFixed64(Fixed64Value);
      }
      if (FloatValue != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(FloatValue);
      }
      if (Int32Value != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Int32Value);
      }
      if (Int64Value != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Int64Value);
      }
      if (messageValue_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(MessageValue);
      }
      if (Sfixed32Value != 0) {
        output.WriteRawTag(93);
        output.WriteSFixed32(Sfixed32Value);
      }
      if (Sfixed64Value != 0L) {
        output.WriteRawTag(97);
        output.WriteSFixed64(Sfixed64Value);
      }
      if (Sint32Value != 0) {
        output.WriteRawTag(104);
        output.WriteSInt32(Sint32Value);
      }
      if (Sint64Value != 0L) {
        output.WriteRawTag(112);
        output.WriteSInt64(Sint64Value);
      }
      if (StringValue.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(StringValue);
      }
      if (Uint32Value != 0) {
        output.WriteRawTag(128, 1);
        output.WriteUInt32(Uint32Value);
      }
      if (Uint64Value != 0UL) {
        output.WriteRawTag(136, 1);
        output.WriteUInt64(Uint64Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BoolFlag != false) {
        size += 1 + 1;
      }
      if (BytesValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BytesValue);
      }
      if (DoubleValue != 0D) {
        size += 1 + 8;
      }
      if (EnumValue != global::sRPC.Test.Proto.EnumObject.DefaultValue) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EnumValue);
      }
      if (Fixed32Value != 0) {
        size += 1 + 4;
      }
      if (Fixed64Value != 0UL) {
        size += 1 + 8;
      }
      if (FloatValue != 0F) {
        size += 1 + 4;
      }
      if (Int32Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int32Value);
      }
      if (Int64Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Int64Value);
      }
      if (messageValue_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MessageValue);
      }
      if (Sfixed32Value != 0) {
        size += 1 + 4;
      }
      if (Sfixed64Value != 0L) {
        size += 1 + 8;
      }
      if (Sint32Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeSInt32Size(Sint32Value);
      }
      if (Sint64Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Sint64Value);
      }
      if (StringValue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StringValue);
      }
      if (Uint32Value != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Uint32Value);
      }
      if (Uint64Value != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uint64Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiFields other) {
      if (other == null) {
        return;
      }
      if (other.BoolFlag != false) {
        BoolFlag = other.BoolFlag;
      }
      if (other.BytesValue.Length != 0) {
        BytesValue = other.BytesValue;
      }
      if (other.DoubleValue != 0D) {
        DoubleValue = other.DoubleValue;
      }
      if (other.EnumValue != global::sRPC.Test.Proto.EnumObject.DefaultValue) {
        EnumValue = other.EnumValue;
      }
      if (other.Fixed32Value != 0) {
        Fixed32Value = other.Fixed32Value;
      }
      if (other.Fixed64Value != 0UL) {
        Fixed64Value = other.Fixed64Value;
      }
      if (other.FloatValue != 0F) {
        FloatValue = other.FloatValue;
      }
      if (other.Int32Value != 0) {
        Int32Value = other.Int32Value;
      }
      if (other.Int64Value != 0L) {
        Int64Value = other.Int64Value;
      }
      if (other.messageValue_ != null) {
        if (messageValue_ == null) {
          MessageValue = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        MessageValue.MergeFrom(other.MessageValue);
      }
      if (other.Sfixed32Value != 0) {
        Sfixed32Value = other.Sfixed32Value;
      }
      if (other.Sfixed64Value != 0L) {
        Sfixed64Value = other.Sfixed64Value;
      }
      if (other.Sint32Value != 0) {
        Sint32Value = other.Sint32Value;
      }
      if (other.Sint64Value != 0L) {
        Sint64Value = other.Sint64Value;
      }
      if (other.StringValue.Length != 0) {
        StringValue = other.StringValue;
      }
      if (other.Uint32Value != 0) {
        Uint32Value = other.Uint32Value;
      }
      if (other.Uint64Value != 0UL) {
        Uint64Value = other.Uint64Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BoolFlag = input.ReadBool();
            break;
          }
          case 18: {
            BytesValue = input.ReadBytes();
            break;
          }
          case 25: {
            DoubleValue = input.ReadDouble();
            break;
          }
          case 32: {
            EnumValue = (global::sRPC.Test.Proto.EnumObject) input.ReadEnum();
            break;
          }
          case 45: {
            Fixed32Value = input.ReadFixed32();
            break;
          }
          case 49: {
            Fixed64Value = input.ReadFixed64();
            break;
          }
          case 61: {
            FloatValue = input.ReadFloat();
            break;
          }
          case 64: {
            Int32Value = input.ReadInt32();
            break;
          }
          case 72: {
            Int64Value = input.ReadInt64();
            break;
          }
          case 82: {
            if (messageValue_ == null) {
              MessageValue = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(MessageValue);
            break;
          }
          case 93: {
            Sfixed32Value = input.ReadSFixed32();
            break;
          }
          case 97: {
            Sfixed64Value = input.ReadSFixed64();
            break;
          }
          case 104: {
            Sint32Value = input.ReadSInt32();
            break;
          }
          case 112: {
            Sint64Value = input.ReadSInt64();
            break;
          }
          case 122: {
            StringValue = input.ReadString();
            break;
          }
          case 128: {
            Uint32Value = input.ReadUInt32();
            break;
          }
          case 136: {
            Uint64Value = input.ReadUInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
