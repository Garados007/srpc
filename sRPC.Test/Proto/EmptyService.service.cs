// <auto-generated>
//     Generated by the sRPC compiler.  DO NOT EDIT!
//     source: Proto/empty_service.proto
// </auto-generated>
#pragma warning disable CS0067, CS0612, CS1591
#region Designer generated code

using gp = global::Google.Protobuf;
using gpw = global::Google.Protobuf.WellKnownTypes;
using s = global::System;
using scg = global::System.Collections.Generic;
using global::System.Linq;
using srpc = global::sRPC;
using st = global::System.Threading;
using stt = global::System.Threading.Tasks;

#nullable enable

namespace sRPC.Test.Proto
{
    /// <summary>
    /// The client of the EmptyService api
    /// </summary>
    public class EmptyServiceClient : srpc::IApiClientDefinition2
    {
        event s::Func<srpc::NetworkRequest, stt::Task<srpc::NetworkResponse>>? srpc::IApiClientDefinition.PerformMessage
        {
            add => PerformMessagePrivate += value;
            remove => PerformMessagePrivate -= value;
        }

        event s::Func<srpc::NetworkRequest, st::CancellationToken, stt::Task<srpc::NetworkResponse>>? srpc::IApiClientDefinition2.PerformMessage2
        {
            add => PerformMessage2Private += value;
            remove => PerformMessage2Private -= value;
        }

        private event s::Func<srpc::NetworkRequest, stt::Task<srpc::NetworkResponse>>? PerformMessagePrivate;

        private event s::Func<srpc::NetworkRequest, st::CancellationToken, stt::Task<srpc::NetworkResponse>>? PerformMessage2Private;
    }

    /// <summary>
    /// The base class for the server implementation of the EmptyService api
    /// </summary>
    public abstract class EmptyServiceServerBase : srpc::IApiServerDefinition2
    {
        stt::Task<srpc::NetworkResponse?> srpc::IApiServerDefinition.HandleMessage(srpc::NetworkRequest request)
            => ((srpc::IApiServerDefinition2)this).HandleMessage2(request, st::CancellationToken.None);

        async stt::Task<srpc::NetworkResponse?> srpc::IApiServerDefinition2.HandleMessage2(srpc::NetworkRequest request, st::CancellationToken cancellationToken)
        {
            _ = request ?? throw new s::ArgumentNullException(nameof(request));
            switch (request.ApiFunction)
            {
                default:
                    await stt::Task.CompletedTask.ConfigureAwait(false);
                    throw new s::NotSupportedException($"{request.ApiFunction} is not defined");
            }
        }
    }
}

#endregion Designer generated code
