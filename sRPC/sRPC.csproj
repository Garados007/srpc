<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="sRPC.csproj.include"/>

  <PropertyGroup>
    <TargetFramework>netstandard2.1</TargetFramework>
    <PackageId>sRPC</PackageId>
    <Authors>garados007</Authors>
    <Company>Max Brauer</Company>
    <PackageDescription>
      sRPC is an async ProtoBuf service interface that sends its messages directly (binary) on .NET Streams.
      This can be used to call rpc proto services directly with TCP Sockets or Names Pipes.
    </PackageDescription>
    <PackageLicenseFile>$(_InternalLicenseFileName)</PackageLicenseFile>
    <RepositoryUrl>https://github.com/Garados007/srpc</RepositoryUrl>
  </PropertyGroup>

  <ItemGroup>
    <None Include="$(_InternalLicenseFileName)" Pack="true" PackagePath="$(_InternalLicenseFileName)">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Google.Protobuf" Version="3.12.3" />
    <PackageReference Include="Grpc.Tools" Version="2.30.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
  </ItemGroup>
  
  <ItemGroup>
    <Protobuf Include="**/*.proto" OutputDir="%(RelativeDir)" CompileOutputs="false" />
  </ItemGroup>
  
  <ItemGroup>
    <Protobuf Update="NetworkMessage.proto" GrpcServices="None" />
  </ItemGroup>

  <PropertyGroup>
    <_DesiredLicenseFileName>LICENSE</_DesiredLicenseFileName>
    <_InternalLicenseFileName>LICENSE.txt</_InternalLicenseFileName>
  </PropertyGroup>

  <Target Name="CopyLicenseFileForPackagingPurposes" BeforeTargets="BeforeBuild" Condition="!Exists('$(_InternalLicenseFileName)')">
    <Copy SourceFiles="..\$(_DesiredLicenseFileName)" DestinationFiles="$(_InternalLicenseFileName)" />
  </Target>

</Project>
